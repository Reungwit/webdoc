# doc_intro.py
# --------------------------------------------------
# ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ Word ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:
#   (1) ‡∏ö‡∏ó‡∏Ñ‡∏±‡∏î‡∏¢‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
#   (2) Abstract ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
#   (3) ‡∏Å‡∏¥‡∏ï‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô)
#
# ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå:
#   - ‡πÉ‡∏ä‡πâ Tab Stops ‡πÉ‡∏´‡πâ ":" ‡∏ï‡∏£‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
#   - ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà 2 ‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ (‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏ó‡∏≥/‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á/‡∏™‡∏≤‡∏Ç‡∏≤/‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤) ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà ":" ‡πÅ‡∏•‡∏∞‡πÄ‡∏¢‡∏∑‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Ñ‡πà‡∏≤
#   - ‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏ï‡∏¥‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (TH/EN)
#   - ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (‡πÑ‡∏ó‡∏¢/‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©) ‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
#   - ‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç/Keywords ‡πÄ‡∏ß‡πâ‡∏ô 1 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
#   - ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡πà "‡∏Å‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤" (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà footer) ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ framePr ‡∏¢‡∏∂‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤
# --------------------------------------------------

from docx import Document
from docx.shared import Pt, Cm
from docx.enum.text import WD_ALIGN_PARAGRAPH
from docx.enum.section import WD_SECTION
from docx.oxml.ns import qn
from docx.oxml import OxmlElement
from pythainlp.tokenize import word_tokenize

# ======= ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Tab Stops (‡πÄ‡∏ã‡∏ô‡∏ï‡∏¥‡πÄ‡∏°‡∏ï‡∏£) =======
LABEL_TAB_CM = 3.5   # ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Label
COLON_TAB_CM = 4.0   # ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ ":"


# ==================================================
# üîπ Helper ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤/‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
# ==================================================

def set_thai_distributed(paragraph):
    """‡∏à‡∏±‡∏î‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î (thaiDistribute) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢‡∏Å‡∏ß‡πà‡∏≤ justify ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤"""
    p_pr = paragraph._p.get_or_add_pPr()
    jc = OxmlElement("w:jc")
    jc.set(qn("w:val"), "thaiDistribute")
    p_pr.append(jc)

def add_center_paragraph(doc, text, bold=True):
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏≤‡∏£‡∏≤‡∏Å‡∏£‡∏≤‡∏ü‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á (‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á '‡∏ö‡∏ó‡∏Ñ‡∏±‡∏î‡∏¢‡πà‡∏≠', 'Abstract')"""
    p = doc.add_paragraph(text)
    p.alignment = WD_ALIGN_PARAGRAPH.CENTER
    r = p.runs[0]
    r.bold = bold
    r.font.name = "TH SarabunPSK"
    r.font.size = Pt(16)
    return p

def add_wrapped_paragraph(doc, text, n=85, indent=True):
    """
    ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏î‡∏Ñ‡∏≥‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡πÑ‡∏ó‡∏¢)
    - n: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ï‡πà‡∏≠‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏±‡∏î‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
    - indent: ‡∏¢‡πà‡∏≠‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏£‡∏Å 1.27 ‡∏ã‡∏°.
    """
    p = doc.add_paragraph()
    p.alignment = WD_ALIGN_PARAGRAPH.JUSTIFY
    if indent:
        p.paragraph_format.first_line_indent = Cm(1.27)

    words = word_tokenize(text or "", engine="newmm")
    buf = ""
    for w in words:
        if len(buf + w) <= n:
            buf += w
        else:
            p.add_run(buf.strip())
            p.add_run().add_break()
            buf = w
    if buf:
        p.add_run(buf.strip())

    for r in p.runs:
        r.font.name = "TH SarabunPSK"
        r.font.size = Pt(16)

    set_thai_distributed(p)
    return p

def add_left_paragraph(doc, text, space_before_pt=None):
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ (‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡πâ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÑ‡∏î‡πâ)"""
    p = doc.add_paragraph(text)
    p.alignment = WD_ALIGN_PARAGRAPH.LEFT
    if space_before_pt is not None:
        p.paragraph_format.space_before = Pt(space_before_pt)
    r = p.runs[0]
    r.font.name = "TH SarabunPSK"
    r.font.size = Pt(16)
    return p

def add_right_paragraph(doc, text, space_before=12):
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤ (‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡πâ‡∏≤)"""
    p = doc.add_paragraph(text)
    p.alignment = WD_ALIGN_PARAGRAPH.RIGHT
    p.paragraph_format.space_before = Pt(space_before)
    r = p.runs[0]
    r.font.name = "TH SarabunPSK"
    r.font.size = Pt(16)
    return p


# ==================================================
# üîπ Helper ‡∏à‡∏±‡∏î Tab Stops ‡πÉ‡∏´‡πâ ":" ‡∏ï‡∏£‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
# ==================================================

def _set_tabstops(p):
    """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Tab Stops ‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ß‡∏≤‡∏á Label, ':' ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤ ‡πÑ‡∏î‡πâ‡∏ï‡∏£‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô"""
    ts = p.paragraph_format.tab_stops
    for t in list(ts):
        ts.remove(t)
    ts.add_tab_stop(Cm(LABEL_TAB_CM))
    ts.add_tab_stop(Cm(COLON_TAB_CM))

def _add_info_line(doc, label, first_value_line):
    """‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: 'Label<TAB>:<TAB>Value'"""
    p = doc.add_paragraph()
    p.alignment = WD_ALIGN_PARAGRAPH.LEFT
    _set_tabstops(p)
    r = p.add_run(f"{label}\t:\t{first_value_line}")
    r.font.name = "TH SarabunPSK"
    r.font.size = Pt(16)

def _add_cont_line(doc, value_line):
    """‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: ‡πÑ‡∏°‡πà‡∏°‡∏µ ':' ‡πÅ‡∏•‡∏∞‡πÄ‡∏¢‡∏∑‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Ñ‡πà‡∏≤‡πÇ‡∏î‡∏¢‡∏Å‡∏î‡πÅ‡∏ó‡πá‡∏ö 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á"""
    p = doc.add_paragraph()
    p.alignment = WD_ALIGN_PARAGRAPH.LEFT
    _set_tabstops(p)
    r = p.add_run(f"\t\t{value_line}")
    r.font.name = "TH SarabunPSK"
    r.font.size = Pt(16)

def add_info_block_with_tabs(doc, pairs):
    """
    ‡∏ß‡∏≤‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢ Tab Stops
    pairs: [(label: str, value_lines: list[str]), ...]
      - value_lines[0] = ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏£‡∏Å (‡πÅ‡∏™‡∏î‡∏á ':')
      - value_lines[1..] = ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ï‡πà‡∏≠ ‡πÜ ‡πÑ‡∏õ (‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á ':')
    """
    for label, lines in pairs:
        lines = lines or [""]
        _add_info_line(doc, label, lines[0].strip())
        for cont in lines[1:]:
            _add_cont_line(doc, cont.strip())


# ==================================================
# üîπ ‡∏ß‡∏≤‡∏á "‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô" ‡∏ó‡∏µ‡πà‡∏Å‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏© (‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤) ‡∏î‡πâ‡∏ß‡∏¢ framePr
# ==================================================

def _emu_from_pt(pt_val: float) -> int:
    """‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏∏‡∏î (pt) ‡πÄ‡∏õ‡πá‡∏ô EMU (1 pt = 12700 EMU)"""
    return int(round(pt_val * 12700))

def _twips_from_pt(pt_val: float) -> int:
    """‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏∏‡∏î (pt) ‡πÄ‡∏õ‡πá‡∏ô twips (1 pt = 20 twips)"""
    return int(round(pt_val * 20))

def add_signature_at_page_bottom(doc, section, caption: str, underline_len: int = 60, bottom_gap_pt: int = 6):
    """
    ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ "‡πÄ‡∏™‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ã‡πá‡∏ô + ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°" ‡πÑ‡∏ß‡πâ‡∏Å‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏© (‡∏†‡∏≤‡∏¢‡πÉ‡∏ô body ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà footer)
    ‡πÇ‡∏î‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢ w:framePr ‡∏¢‡∏∂‡∏î‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤/‡∏Ç‡∏≠‡∏ö‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©

    ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå:
      - caption         : ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢‡πÄ‡∏™‡πâ‡∏ô (‡πÄ‡∏ä‡πà‡∏ô '‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå' / 'Project Advisor')
      - underline_len   : ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô "_" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÄ‡∏™‡πâ‡∏ô
      - bottom_gap_pt   : ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠‡∏ö‡∏•‡πà‡∏≤‡∏á (pt) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ä‡∏ô‡∏Ç‡∏≠‡∏ö‡∏û‡∏¥‡∏°‡∏û‡πå (‡πÄ‡∏ä‡πà‡∏ô 6‚Äì12pt)

    ‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£:
      - ‡∏ß‡∏≤‡∏á vAnchor='page'  ‡πÅ‡∏•‡∏∞ hAnchor='margin'
      - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì y (‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á) ‡πÄ‡∏õ‡πá‡∏ô: page_height - bottom_margin - bottom_gap - ‡∏™‡∏π‡∏á‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
      - ‡πÉ‡∏™‡πà‡∏•‡∏á‡πÉ‡∏ô‡∏û‡∏≤‡∏£‡∏≤‡∏Å‡∏£‡∏≤‡∏ü‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á section (‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡πà‡∏ß‡∏ô‡πÑ‡∏ó‡∏¢/‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)
    """
    # --- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏û‡∏¥‡∏Å‡∏±‡∏î y ‡πÄ‡∏õ‡πá‡∏ô twips ---
    page_height_pt = section.page_height.pt
    bottom_margin_pt = section.bottom_margin.pt

    # ‡∏™‡∏π‡∏á‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô (‡∏ü‡∏≠‡∏ô‡∏ï‡πå 16pt line spacing 1.0)
    line_pt = 16.0

    # y ‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠‡∏ö‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤ ‚Üí ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏Å‡∏•‡πâ bottom margin
    y_pt = page_height_pt - bottom_margin_pt - bottom_gap_pt - line_pt
    y_tw = _twips_from_pt(y_pt)

    # --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö framePr ---
    p = doc.add_paragraph()
    p.alignment = WD_ALIGN_PARAGRAPH.CENTER
    p.paragraph_format.space_before = Pt(0)
    p.paragraph_format.space_after = Pt(0)

    # ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏™‡πâ‡∏ô + ‡πÄ‡∏ß‡πâ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏±‡∏î‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î + ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
    run1 = p.add_run("_" * underline_len + "\u00A0\u00A0")
    run1.font.name = "TH SarabunPSK"
    run1.font.size = Pt(16)

    run2 = p.add_run(caption)
    run2.font.name = "TH SarabunPSK"
    run2.font.size = Pt(16)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á w:framePr ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∂‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤
    pPr = p._p.get_or_add_pPr()
    framePr = OxmlElement('w:framePr')

    # ‡∏¢‡∏∂‡∏î‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏Å‡∏±‡∏ö "page", ‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô‡∏Å‡∏±‡∏ö "margin"
    framePr.set(qn('w:vAnchor'), 'page')
    framePr.set(qn('w:hAnchor'), 'margin')

    # ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á y (twips) ‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠‡∏ö‡∏ö‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤
    framePr.set(qn('w:y'), str(y_tw))

    # ‡∏•‡πá‡∏≠‡∏Ñ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á (‡∏Å‡∏±‡∏ô Word ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô)
    framePr.set(qn('w:anchorLock'), '1')

    # ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ wrap ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏≠‡∏ö ‡πÜ
    framePr.set(qn('w:wrap'), 'none')

    # ‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á margin (x ‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏ ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÉ‡∏´‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢ alignment)
    # ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å fix x ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡πÄ‡∏ä‡πà‡∏ô‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤) ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ set w:x ‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô

    pPr.append(framePr)

    return p


# ==================================================
# üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÑ‡∏ó‡∏¢/‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)
# ==================================================

def add_header_info_th(document, data):
    """‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î 2 ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢"""
    author_lines = [data.get("author1_th", "") or ""]
    if data.get("author2_th"):
        author_lines.append(data.get("author2_th", ""))

    proj_lines = [data.get("project_name_th", "") or ""]
    if data.get("project_name_th_line2"):
        proj_lines.append(data.get("project_name_th_line2", ""))

    major_lines = [data.get("major_th", "") or "",
                   "‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏û‡∏£‡∏∞‡∏à‡∏≠‡∏°‡πÄ‡∏Å‡∏•‡πâ‡∏≤‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡πÄ‡∏´‡∏ô‡∏∑‡∏≠"]

    advisor_lines = [data.get("advisor_th", "") or ""]
    if data.get("coadvisor_th"):
        advisor_lines.append(data.get("coadvisor_th", ""))

    pairs = [
        ("‡∏ä‡∏∑‡πà‡∏≠", author_lines),
        ("‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå", proj_lines),
        ("‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤", major_lines),
        ("‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå", advisor_lines),
        ("‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤", [str(data.get("academic_year_th", "") or "")]),
    ]
    add_info_block_with_tabs(document, pairs)

def add_header_info_en(document, data):
    """‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î 2 ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢"""
    author_lines = [data.get("author1_en", "") or ""]
    if data.get("author2_en"):
        author_lines.append(data.get("author2_en", ""))

    proj_lines = [data.get("project_name_en", "") or ""]
    if data.get("project_name_en_line2"):
        proj_lines.append(data.get("project_name_en_line2", ""))

    major_lines = [data.get("major_en", "") or "",
                   "King Mongkut‚Äôs University of Technology North Bangkok"]

    advisor_lines = [data.get("advisor_en", "") or ""]
    if data.get("coadvisor_en"):
        advisor_lines.append(data.get("coadvisor_en", ""))

    pairs = [
        ("Name", author_lines),
        ("Project Title", proj_lines),
        ("Major Field", major_lines),
        ("Project Advisor", advisor_lines),
        ("Academic Year", [str(data.get("academic_year_en", "") or "")]),
    ]
    add_info_block_with_tabs(document, pairs)


# ==================================================
# üîπ Main: ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á 3 ‡∏™‡πà‡∏ß‡∏ô
# ==================================================

def doc_intro(data: dict):
    document = Document()

    # ----- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô -----
    style = document.styles['Normal']
    style.font.name = "TH SarabunPSK"
    style.element.rPr.rFonts.set(qn("w:eastAsia"), "TH SarabunPSK")
    style.font.size = Pt(16)
    style.paragraph_format.space_before = Pt(0)
    style.paragraph_format.space_after = Pt(0)
    style.paragraph_format.line_spacing = 1.0

    # ===== (1) ‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡∏ó‡∏Ñ‡∏±‡∏î‡∏¢‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ =====
    section_th = document.sections[0]
    section_th.top_margin = Cm(3.81)     # 1.5"
    section_th.bottom_margin = Cm(2.54)  # 1.0"
    section_th.left_margin = Cm(3.81)    # 1.5"
    section_th.right_margin = Cm(2.54)   # 1.0"

    add_header_info_th(document, data)
    add_center_paragraph(document, "‡∏ö‡∏ó‡∏Ñ‡∏±‡∏î‡∏¢‡πà‡∏≠", True)
    add_wrapped_paragraph(document, data.get("abstract_th_para1", ""), n=87, indent=True)
    add_wrapped_paragraph(document, data.get("abstract_th_para2", ""), n=87, indent=True)

    # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (‡πÑ‡∏ó‡∏¢) ‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤
    pages_th = str(data.get("total_pages", "") or "")
    add_right_paragraph(document, f"(‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô {pages_th} ‡∏´‡∏ô‡πâ‡∏≤)", space_before=6)

    # ‡πÄ‡∏ß‡πâ‡∏ô 1 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
    add_left_paragraph(document, f"‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: {data.get('keyword_th', '')}", space_before_pt=16)

    # üîª ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô: ‡∏ß‡∏≤‡∏á "‡πÉ‡∏ô‡∏Å‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©" ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏ó‡∏¢ (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà footer)
    add_signature_at_page_bottom(document, section_th, "‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå",
                                 underline_len=51, bottom_gap_pt=8)

    # ===== (2) ‡∏´‡∏ô‡πâ‡∏≤ Abstract ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© =====
    section_en = document.add_section(WD_SECTION.NEW_PAGE)
    section_en.top_margin = section_th.top_margin
    section_en.bottom_margin = section_th.bottom_margin
    section_en.left_margin = section_th.left_margin
    section_en.right_margin = section_th.right_margin

    add_header_info_en(document, data)
    add_center_paragraph(document, "Abstract", True)
    add_wrapped_paragraph(document, data.get("abstract_en_para1", ""), n=85, indent=True)
    add_wrapped_paragraph(document, data.get("abstract_en_para2", ""), n=85, indent=True)

    # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©) ‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤
    pages_en = str(data.get("total_pages", "") or "")
    add_right_paragraph(document, f"(Total {pages_en} Page)", space_before=6)

    # ‡πÄ‡∏ß‡πâ‡∏ô 1 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏•‡πâ‡∏ß Keywords
    add_left_paragraph(document, f"Keywords: {data.get('keyword_en', '')}", space_before_pt=16)

    # üîª ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô: ‡∏ß‡∏≤‡∏á "‡πÉ‡∏ô‡∏Å‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©" ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà footer)
    add_signature_at_page_bottom(document, section_en, "Project Advisor",
                                 underline_len=62, bottom_gap_pt=8)

    # ===== (3) ‡∏´‡∏ô‡πâ‡∏≤ ‡∏Å‡∏¥‡∏ï‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô) =====
    section_ack = document.add_section(WD_SECTION.NEW_PAGE)
    section_ack.top_margin = section_th.top_margin
    section_ack.bottom_margin = section_th.bottom_margin
    section_ack.left_margin = section_th.left_margin
    section_ack.right_margin = section_th.right_margin

    add_center_paragraph(document, "‡∏Å‡∏¥‡∏ï‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®", True)
    add_wrapped_paragraph(document, data.get("acknow_para1", ""), n=87, indent=True)
    add_wrapped_paragraph(document, data.get("acknow_para2", ""), n=87, indent=True)

    # ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏ó‡∏≥ (‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤) ‚Äî ‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏Ç‡∏µ‡∏î‡πÄ‡∏™‡πâ‡∏ô
    if data.get("acknow_name1"):
        add_right_paragraph(document, data.get("acknow_name1", ""), space_before=36)
    if data.get("acknow_name2"):
        add_right_paragraph(document, data.get("acknow_name2", ""), space_before=12)

    return document
