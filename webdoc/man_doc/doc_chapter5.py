# man_doc/doc_chapter5.py

from typing import List, Dict, Any, Iterable, Tuple

# üîπ ‡πÉ‡∏ä‡πâ‡∏¢‡∏π‡∏ó‡∏¥‡∏•‡∏¥‡∏ï‡∏µ‡πâ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏•‡∏≤‡∏á (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏¥‡∏¢‡∏≤‡∏°‡∏ã‡πâ‡∏≥)
from man_doc.doc_function import (
    doc_setup,
    add_center_paragraph,
    add_left_paragraph,
    add_right_paragraph,
    add_paragraph_indent,
    add_wrapped_paragraph,
    add_page_break,
    apply_rest_page_margin,
)


# ========================= ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏ó‡∏ô‡∏µ‡πâ) =========================
FONT_NAME = "TH SarabunPSK"
BASE_PT = 16
TITLE_PT = 20
LINE_LEN = 80           # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏î‡∏Ñ‡∏≥‡πÑ‡∏ó‡∏¢

# ‡∏£‡∏∞‡∏¢‡∏∞‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©
FIRST_TOP_INCH = 2.0        # ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
REST_TOP_INCH  = 1.0        # ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
LEFT_INCH  = 1.5
RIGHT_INCH = 1.0
BOTTOM_INCH = 1.0

# ‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡πà‡∏≠‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏£‡∏Å
FIRSTLINE_CM = 1.00
SUB_FIRSTLINE_CM = 1.50


# ========================= ‡∏ï‡∏±‡∏ß‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å UI (‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö‡∏ö‡∏ó 5) =========================
def iter_sections(sections: List[Dict[str, Any]]) -> Iterable[Tuple[str, str, List[Dict[str, Any]]]]:
    """
    ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö schema ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ chapter_5.html
      [{ title, body, points:[{ main, subs:[str] }] }, ...]
    """
    sections = sections if isinstance(sections, list) else []
    for sec in sections:
        if not isinstance(sec, dict):
            continue
        title = (sec.get("title") or sec.get("header") or sec.get("name") or "").strip()
        body  = (sec.get("body")  or sec.get("content") or sec.get("desc")  or "").strip()
        points = sec.get("points") or sec.get("mains") or sec.get("items") or []
        mains: List[Dict[str, Any]] = []
        if isinstance(points, list):
            for p in points:
                if isinstance(p, dict):
                    mains.append({
                        "text": (p.get("main") or p.get("text") or p.get("title") or "").strip(),
                        "subs": [
                            (s if isinstance(s, str) else
                             (s.get("text") or s.get("title") or s.get("name") or "")
                            ) for s in (p.get("subs") or [])
                        ]
                    })
                elif isinstance(p, str):
                    mains.append({"text": p.strip(), "subs": []})
        yield title, body, mains


# ========================= ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å (‡∏ö‡∏ó‡∏ó‡∏µ‡πà 5) =========================
def doc_chapter5(intro_body: str, sections_json: List[Dict[str, Any]]):
    """
    ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏ó‡∏ó‡∏µ‡πà 5 ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠:
    - ‡∏ü‡∏≠‡∏ô‡∏ï‡πå TH SarabunPSK ‡∏Ç‡∏ô‡∏≤‡∏î 16pt, ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î 1.0 (‡πÉ‡∏ä‡πâ doc_setup ‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô)
    - ‡∏´‡∏±‡∏ß‡∏Å‡∏•‡∏≤‡∏á 2 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î (20pt ‡∏´‡∏ô‡∏≤): '‡∏ö‡∏ó‡∏ó‡∏µ‡πà 5' ‡πÅ‡∏•‡∏∞ '‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢ ‡∏≠‡∏†‡∏¥‡∏õ‡∏£‡∏≤‡∏¢‡∏ú‡∏• ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞'
    - ‡∏£‡∏∞‡∏¢‡∏∞‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å: ‡∏ö‡∏ô 2.0", ‡∏•‡πà‡∏≤‡∏á 1.0", ‡∏ã‡πâ‡∏≤‡∏¢ 1.5", ‡∏Ç‡∏ß‡∏≤ 1.0" (doc_setup ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏•‡πâ‡∏ß)
      ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô top 1.0" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢ section ‡πÅ‡∏ö‡∏ö‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á
    - ‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤: ‡πÉ‡∏ä‡πâ add_wrapped_paragraph (tap=1.0 ‡∏ã‡∏°.) ‡∏´‡∏£‡∏∑‡∏≠ custom_tap
    """
    # ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏•‡∏≤‡∏á
    doc = doc_setup()  # ‡∏ï‡∏±‡πâ‡∏á‡∏ü‡∏≠‡∏ô‡∏ï‡πå/‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î/‡∏°‡∏≤‡∏£‡πå‡∏à‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô

    # ===== ‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ =====
    add_center_paragraph(doc, "‡∏ö‡∏ó‡∏ó‡∏µ‡πà 5", bold=True, font_size=TITLE_PT)
    add_center_paragraph(doc, "‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢ ‡∏≠‡∏†‡∏¥‡∏õ‡∏£‡∏≤‡∏¢‡∏ú‡∏• ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞", bold=True, font_size=TITLE_PT)

    # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô top margin ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô 1.0" (‡πÑ‡∏°‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà)
    apply_rest_page_margin(
        doc,
        top_inch=REST_TOP_INCH,
        left_inch=LEFT_INCH,
        right_inch=RIGHT_INCH,
        bottom_inch=BOTTOM_INCH
    )

    # ===== 5.1 ‡∏ö‡∏ó‡∏ô‡∏≥ =====
    add_left_paragraph(doc, "5.1  ‡∏ö‡∏ó‡∏ô‡∏≥", bold=True)
    if (intro_body or "").strip():
        # ‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢ + ‡∏¢‡πà‡∏≠‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏£‡∏Å 1 ‡∏ã‡∏°. + ‡∏ï‡∏±‡∏î‡∏Ñ‡∏≥‡πÑ‡∏ó‡∏¢‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö \t
        add_wrapped_paragraph(doc, intro_body, n=LINE_LEN, disth=True, tap=True)

    # ===== 5.2, 5.3, ... =====
    for i, (title, body, mains) in enumerate(iter_sections(sections_json), start=2):
        # ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡∏ç‡πà (‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏≤)
        add_left_paragraph(doc, f"5.{i}  {title}".strip(), bold=True)

        # ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡∏ç‡πà
        if body:
            add_wrapped_paragraph(doc, body, n=LINE_LEN, disth=True, tap=True)

        # ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å 5.i.j
        for j, m in enumerate(mains or [], start=1):
            main_text = (m.get("text") or "").strip()
            if main_text:
                add_paragraph_indent(doc, f"5.{i}.{j}  {main_text}", bold=False, custom_tap=FIRSTLINE_CM)

            # ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏¢‡πà‡∏≠‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° 5.i.j.k
            subs = m.get("subs") if isinstance(m.get("subs"), list) else []
            for k, s in enumerate(subs, start=1):
                s = (s or "").strip()
                if s:
                    add_wrapped_paragraph(
                        doc,
                        f"5.{i}.{j}.{k}  {s}",
                        n=LINE_LEN,
                        disth=True,
                        custom_tap=SUB_FIRSTLINE_CM
                    )

        # ‡πÄ‡∏ß‡πâ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
        doc.add_paragraph()

    return doc
